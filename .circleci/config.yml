version: 2.1
#test

orbs:
  jira: circleci/jira@1.1.3

jobs:

  version:
    docker:
      - image: 475375841787.dkr.ecr.eu-west-1.amazonaws.com/nmr/deploytools
    steps:
      - checkout
      - run:
          name: "Generate version number"
          command: versiongen
      - persist_to_workspace:
          root: ~/project
          paths:
            - 'version.txt'

  unittest:
    docker:
      - image: circleci/node:12.14.0
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm ci
      - run:
          name: Run Unit Tests
          command: npm run test-ci
          environment:
            JEST_JUNIT_OUTPUT_DIR: reports/junit/jest
      - run:
          name: "Notify on Slack if tests failed"
          when: on_fail
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              curl -X POST \
                -H 'Content-type: application/json' \
                --data "{\"text\": \"<${CIRCLE_BUILD_URL}|CircleCI:#${CIRCLE_BUILD_NUM}>: app-process-admin unit tests failed.\"}" \
                "$SLACK_HOOK_URL"
            fi
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

  lint:
    docker:
      - image: circleci/node:12.14.0
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm ci
      - run:
          name: Run Lint
          command: npm run lint-ci
      - run:
          name: "Notify on Slack if tests failed"
          when: on_fail
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              curl -X POST \
                -H 'Content-type: application/json' \
                --data "{\"text\": \"<${CIRCLE_BUILD_URL}|CircleCI:#${CIRCLE_BUILD_NUM}>: app-process-admin lint failed.\"}" \
                "$SLACK_HOOK_URL"
            fi
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

  build:
    docker:
      - image: 475375841787.dkr.ecr.eu-west-1.amazonaws.com/nmr/deploytools
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: ~/project
      - run:
          name: "Build, tag and push"
          command: docker-build
      - run:
          name: "Build fail slack notification"
          command: slack-notification "Failed to build app-process-admin $(cat version.txt)"
          when: on_fail

  deploy-dev:
    docker:
      - image: 475375841787.dkr.ecr.eu-west-1.amazonaws.com/nmr/deploytools
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: "Deploy to Kubernetes"
          command: eks-deploy dev
      - run:
          name: "Wait for version"
          command: version-wait https://horizon-dev.bbfc.co.uk/health $(cat version.txt)
      - run:
          name: "Dev deploy fail slack notification"
          command: slack-notification "Failed to deploy app-process-admin $(cat version.txt) to dev"
          when: on_fail

  deploy-int:
    docker:
      - image: 475375841787.dkr.ecr.eu-west-1.amazonaws.com/nmr/deploytools
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: "Deploy to Kubernetes"
          command: eks-deploy int
      - run:
          name: "Wait for version"
          command: version-wait https://horizon-int.bbfc.co.uk/health $(cat version.txt)
      - run:
          name: "Int deploy fail slack notification"
          command: slack-notification "Failed to deploy app-process-admin $(cat version.txt) to int"
          when: on_fail
      - run:
          name: "Send Slack notification"
          command: slack-notification "app-process-admin $(cat version.txt) deployed to int"

  deploy-uat:
    docker:
      - image: 475375841787.dkr.ecr.eu-west-1.amazonaws.com/nmr/deploytools
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: "Deploy to Kubernetes"
          command: eks-deploy uat
      - run:
          name: "Wait for version"
          command: version-wait https://horizon-uat.bbfc.co.uk/health $(cat version.txt)
      - run:
          name: "Uat deploy fail slack notification"
          command: slack-notification "Failed to deploy app-process-admin $(cat version.txt) to uat"
          when: on_fail
      - run:
          name: "Send Slack notification"
          command: slack-notification "app-process-admin $(cat version.txt) deployed to uat"

  deploy-production:
    docker:
      - image: 475375841787.dkr.ecr.eu-west-1.amazonaws.com/nmr/deploytools
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: "Deploy to Kubernetes"
          command: eks-deploy production
      - run:
          name: "Wait for version"
          command: version-wait https://horizon.bbfc.co.uk/health $(cat version.txt)
      - run:
          name: "Production deploy fail slack notification"
          command: slack-notification "Failed to deploy app-process-admin $(cat version.txt) to production"
          when: on_fail
      - run:
          name: "Send Slack notification"
          command: slack-notification "app-process-admin $(cat version.txt) deployed to production"

  notify-build:
    docker:
      - image: circleci/node
    steps:
      - jira/notify:
          issue_regexp: '[A-Z0-9]{2,30}-[0-9]+'
          job_type: build

  notify-dev:
    docker:
      - image: circleci/node
    steps:
      - jira/notify:
          environment: DEV
          environment_type: development
          issue_regexp: '[A-Z0-9]{2,30}-[0-9]+'
          job_type: deployment

  notify-int:
    docker:
      - image: circleci/node
    steps:
      - jira/notify:
          environment: INT
          environment_type: development
          issue_regexp: '[A-Z0-9]{2,30}-[0-9]+'
          job_type: deployment

  notify-uat:
    docker:
      - image: circleci/node
    steps:
      - jira/notify:
          environment: UAT
          environment_type: staging
          issue_regexp: '[A-Z0-9]{2,30}-[0-9]+'
          job_type: deployment

  notify-production:
    docker:
      - image: circleci/node
    steps:
      - jira/notify:
          environment: PROD
          environment_type: production
          issue_regexp: '[A-Z0-9]{2,30}-[0-9]+'
          job_type: deployment

workflows:
  version: 2
  default:
    jobs:
      - version:
          filters:
            branches:
              only: master
      - unittest
      - lint
      - build:
          requires:
            - unittest
            - lint
            - version
          filters:
            branches:
              only: master
      - notify-build:
          requires:
            - build
      - deploy-dev:
          requires:
            - build
      - notify-dev:
          requires:
            - deploy-dev
      - approve-int:
          type: approval
          requires:
            - deploy-dev
      - deploy-int:
          requires:
            - approve-int
      - notify-int:
          requires:
            - deploy-int
      - approve-uat:
          type: approval
          requires:
            - deploy-int
      - deploy-uat:
          requires:
            - approve-uat
      - notify-uat:
          requires:
            - deploy-uat
      - approve-production:
          type: approval
          requires:
            - deploy-uat
      - deploy-production:
          requires:
            - approve-production
      - notify-production:
          requires:
            - deploy-production
